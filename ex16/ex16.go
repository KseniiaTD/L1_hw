package main

// Реализовать быструю сортировку слайса (quicksort) встроенными методами языка.

import "fmt"

func quickSort(arr []int) []int { // рекурсивно вызываем функцию быстрой сортировки
	if len(arr) < 2 { // если блина слайса меньше 2, считаем слайс отсортированным и возвращаем его
		return arr
	}
	main := arr[0]      // задаем первый элемент как элемент для сравнения
	leftArr := []int{}  // слайс с элементами меньше элемента для сравнения
	rightArr := []int{} // слайс с элементами больше элемента для сравнения
	all := []int{}      //  слайс с отсортированнывми элементами

	for i := 1; i < len(arr); i++ { //проходим по всему слайсу
		if main > arr[i] { // если текущий элемент меньше сравниваемого, то добавляем его в левый слайс (где меньшие значения)
			leftArr = append(leftArr, arr[i])
		} else { // если текущий элемент больше или равен сравниваемому, то добавляем его в правый слайс (где большие значения)
			rightArr = append(rightArr, arr[i])
		}
	}
	all = append(all, quickSort(leftArr)...)  //добавляем в итоговый слайс результат рекурсивной сортировки левого слайса
	all = append(all, main)                   //добавляем в итоговый слайс сравниваемое значение
	all = append(all, quickSort(rightArr)...) //добавляем в итоговый слайс результат рекурсивной сортировки правого слайса

	return all // возвращаем итоговый слайс
}

func main() {
	arr := []int{5, 7, 1, 3, 20, 13, 16, 19, 2, 8} //создаем слайс из нескольких элементов

	res := quickSort(arr) // вызываем функцию быстрой сортировки

	fmt.Println(res)
}
