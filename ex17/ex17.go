package main

// Реализовать бинарный поиск встроенными методами языка.

import (
	"fmt"
	"math/rand"
)

func binSearch(arr []int, num int) bool { // рекурсивно вызываем функцию бинарного поиска
	if len(arr) == 1 { // если длина слайса = 1, проверяем, является ли элемент слайса искомым, и возвращаем результат
		return num == arr[0]
	}
	// берем элемент из середины текущего слайса
	l := len(arr) / 2  //int / int будет int
	if num == arr[l] { // если выбранный элемент равен искомому, возвращаем результат
		return true
	} else if num < arr[l] { // если элемент больше искомого, берем элементы слайса слева от выбранного элемента и вызываем функцию заново с новым слайсом
		arr1 := arr[0:l]
		return binSearch(arr1, num)
	} else { // если элемент меньше искомого, берем элементы слайса справа от выбранного элемента и вызываем функцию заново с новым слайсом
		arr1 := arr[l+1:]
		return binSearch(arr1, num)
	}
}

func main() {
	arr := make([]int, 10) // создаем отсортированный слайс, т.к. бинарный поиск осуществляется по отсортированному набору элементов

	for i := 0; i < len(arr); i++ {
		arr[i] = i + 1
	}

	num := rand.Intn(len(arr)) // рандомно выбираем элемент, который будем искать

	fmt.Printf("number %d in array: %t\n", num, binSearch(arr, num))
}
