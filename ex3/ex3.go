package main

// Дана последовательность чисел: 2,4,6,8,10. Найти сумму их квадратов(22+32+42….)
// с использованием конкурентных вычислений.

import (
	"fmt"
	"sync"
)

func main() {
	var mu sync.Mutex             //создаем мьютекс
	var sum_arr int               //переменная для подсчета суммы
	var wg sync.WaitGroup         //создаем группу для ожидания горутин
	arr1 := []int{2, 4, 6, 8, 10} //задаем входной слайс
	wg.Add(len(arr1))             // проставляем счетчик горутин для группы
	for _, n := range arr1 {
		go func(n int) { //создаем горутину, в которой высчитывается квадрат числа и добавляется к общей сумме
			defer wg.Done()  //по завершению горутины уменьшаем счетчик горутин для группы
			mu.Lock()        //блокируем переменную для подсчета суммы, т.к. нужен синхронный подсчет
			sum_arr += n * n //добавляем к сумме очередной квадрат числа
			mu.Unlock()      //разблокируем объект
		}(n) //вызываем функцию в горутине
	}
	wg.Wait() //ожидаем выполнения всех горутин в группе
	fmt.Println(sum_arr)
}
