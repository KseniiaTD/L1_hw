package main

// Реализовать структуру-счетчик, которая будет инкрементироваться в конкурентной среде.
// По завершению программа должна выводить итоговое значение счетчика.

import (
	"fmt"
	"sync"
)

type Counter struct { // создаем структуру Счетчик
	i  int        // счетчик
	mu sync.Mutex // мьютекс для синхронизации счетчика
}

func (c *Counter) increment() { // метод Счетчика, увеличение счетчика на 1
	c.mu.Lock()   // блокируем счетчик для синхронизации
	c.i++         // увеличиваем значение на 1
	c.mu.Unlock() // снимаем блокировку
}

func main() {
	counter := Counter{}   // создаем объект структуры Счетчика
	wg := sync.WaitGroup{} // создаем группу для горутин
	n := 100
	wg.Add(n) // задаем сто горутин и вызываем их
	for i := 0; i < n; i++ {
		go func() { // кадая горутина увеличивает счетчсик на 1, затем уменьшает кол-во горутин в группе
			counter.increment()
			wg.Done()
		}()
	}
	wg.Wait()              // ожидаем завершения всех горутин
	fmt.Println(counter.i) // выводим значение счетчика
}
